# Application name
spring.application.name=munan
server.port=8888

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://munan-db-service-munan.g.aivencloud.com:12236/munan_db?ssl=require
spring.datasource.username=avnadmin
spring.datasource.password=AVNS_jVB4SMVetyL7_Xw89rw
spring.datasource.driver-class-name=org.postgresql.Driver

# Load schema.sql and data.sql
#spring.sql.init.mode=always
#spring.jpa.defer-datasource-initialization=true

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# GraphQL Configuration
spring.graphql.graphiql.enabled=true
spring.graphql.schema.printer.enabled=true
spring.graphql.cors.allowed-origins=*
spring.graphql.path=/graphql
spring.graphql.websocket.path=/graphql

# Keycloak service properties
keycloak.domain=http://localhost:8080
keycloak.realm=munan

# Keycloak Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.domain}/realms/${keycloak.realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

# Keycloak Client Configuration
keycloak.client-id=api
keycloak.client-secret=GiexAW8tYIikt5su4vwDOR1kVxgUvllu
keycloak.authorization-grant-type=authorization_code
keycloak.scope=openid,profile,email